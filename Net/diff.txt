diff --git a/.gitignore b/.gitignore
index e41ea59..6ba18c3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -8,9 +8,7 @@
 !kaggle_tutorial
 !kaggle-ndsb2
 !dsbAnalysis
-!kaggle_tutorial/analysis_rslt
 
-kaggle_tutorial/*/
 DATA/
 SunnyOrigin/
 Top3/
diff --git a/Net/Untitled.ipynb b/Net/Untitled.ipynb
deleted file mode 100644
index 47e83fc..0000000
--- a/Net/Untitled.ipynb
+++ /dev/null
@@ -1,316 +0,0 @@
-{
- "cells": [
-  {
-   "cell_type": "code",
-   "execution_count": 1,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": [
-    "pm= {\n",
-    "            'c1':{\n",
-    "                'fsize' : (7,7),\n",
-    "                'fnum'  : 8,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1),\n",
-    "            },\n",
-    "            'c2':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 16,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1),\n",
-    "            },\n",
-    "            'c3':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 32,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c4':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 64,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c5':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 64,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c6':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 64,\n",
-    "                'pad'   : (2,2),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c7':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 64,\n",
-    "                'pad'   : (2,2),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c8':{\n",
-    "                'fsize' : (7,7),\n",
-    "                'fnum'  : 64,\n",
-    "                'pad'   : (6,6),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c9':{\n",
-    "                'fsize' : (3,3),\n",
-    "                'fnum'  : 16,\n",
-    "                'pad'   : (2,2),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c10':{\n",
-    "                'fsize' : (7,7),\n",
-    "                'fnum'  : 8,\n",
-    "                'pad'   : (0,0),\n",
-    "                'stride': (1,1)\n",
-    "            },\n",
-    "            'c11':{\n",
-    "                'fsize' : (7,7),\n",
-    "                'fnum'  : 1,\n",
-    "                'pad'   : (6,6),\n",
-    "                'stride': (1,1)\n",
-    "            }\n",
-    "        }"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 12,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": [
-    "import ipt\n",
-    "import mxnet as mx\n",
-    "import minpy as mp\n",
-    "\n",
-    "sz = (1,1,256,256)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 8,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": [
-    "data = mx.sym.Variable(name= 'data')  #name must be data, don't know why\n",
-    "\n",
-    "\n",
-    "conv1 = mx.sym.Convolution(name = 'conv1', data = data, kernel = pm['c1']['fsize'], \n",
-    "        num_filter = pm['c1']['fnum'], stride = pm['c1']['stride'], pad = pm['c1']['pad'] )\n",
-    "relu1 = mx.sym.Activation(data = conv1, act_type = 'relu')\n",
-    "conv2 = mx.sym.Convolution(name = 'conv2', data = relu1, kernel = pm['c2']['fsize'], \n",
-    "    num_filter = pm['c2']['fnum'], stride = pm['c2']['stride'], pad = pm['c2']['pad'] )\n",
-    "relu2 = mx.sym.Activation(data = conv2, act_type = 'relu')"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 15,
-   "metadata": {
-    "collapsed": false
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "([(1L, 1L, 256L, 256L), (8L, 1L, 7L, 7L), (8L,), (16L, 8L, 3L, 3L), (16L,)],\n",
-       " [(1L, 16L, 248L, 248L)],\n",
-       " [])"
-      ]
-     },
-     "execution_count": 15,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "relu2.infer_shape(data = sz)[]"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 29,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": [
-    "pool1 = mx.sym.Pooling(data = relu2, pool_type = \"max\", kernel=(2,2), stride = (2,2))\n",
-    "\n",
-    "\n",
-    "conv3 = mx.sym.Convolution(name = 'conv3', data = pool1, kernel = pm['c3']['fsize'], \n",
-    "        num_filter = pm['c3']['fnum'], stride = pm['c3']['stride'], pad = pm['c3']['pad'] )\n",
-    "relu3 = mx.sym.Activation(data = conv3, act_type = 'relu')\n",
-    "pool2 = mx.sym.Pooling(data = relu3, pool_type = \"max\", kernel=(2,2), stride = (2,2))\n",
-    "\n",
-    "\n",
-    "conv4 = mx.sym.Convolution(name = 'conv4', data = pool2, kernel = pm['c4']['fsize'], \n",
-    "        num_filter = pm['c4']['fnum'], stride = pm['c4']['stride'], pad = pm['c4']['pad'] )\n",
-    "relu4 = mx.sym.Activation(data = conv4, act_type = 'relu')\n",
-    "pool3 = mx.sym.Pooling(data = relu4, pool_type = \"max\", kernel=(2,2), stride = (2,2))\n",
-    "\n",
-    "conv5 = mx.sym.Convolution(name = 'conv5', data = pool3, kernel = pm['c5']['fsize'], \n",
-    "            num_filter = pm['c5']['fnum'], stride = pm['c5']['stride'], pad = pm['c5']['pad'] )\n",
-    "relu5 = mx.sym.Activation(data = conv5, act_type = 'relu')\n",
-    "conv6 = mx.sym.Convolution(name = 'conv6', data = relu5, kernel = pm['c6']['fsize'], \n",
-    "    num_filter = pm['c6']['fnum'], stride = pm['c6']['stride'], pad = pm['c6']['pad'] )\n",
-    "relu6 = mx.sym.Activation(data = conv6, act_type = 'relu')\n",
-    "\n",
-    "\n",
-    "up1  = mx.sym.UpSampling(relu6, scale = 2, sample_type= 'bilinear', num_args = 1)\n",
-    "\n",
-    "\n",
-    "conv7 = mx.sym.Convolution(name = 'conv7', data = up1, kernel = pm['c7']['fsize'], \n",
-    "    num_filter = pm['c7']['fnum'], stride = pm['c7']['stride'], pad = pm['c7']['pad'] )\n",
-    "relu7 = mx.sym.Activation(data = conv7, act_type = 'relu')\n",
-    "\n",
-    "up2  = mx.sym.UpSampling(relu7, scale = 2, sample_type = 'bilinear', num_args = 1)\n",
-    "\n",
-    "conv8 = mx.sym.Convolution(name = 'conv8', data = up2, kernel = pm['c8']['fsize'], \n",
-    "    num_filter = pm['c8']['fnum'], stride = pm['c8']['stride'], pad = pm['c8']['pad'] )\n",
-    "relu8 = mx.sym.Activation(data = conv8, act_type = 'relu')\n",
-    "\n",
-    "up3  = mx.sym.UpSampling(relu8, scale = 2, sample_type = 'bilinear', num_args = 1)\n",
-    "\n",
-    "\n",
-    "conv9 = mx.sym.Convolution(name = 'conv9', data = up3, kernel = pm['c9']['fsize'], \n",
-    "        num_filter = pm['c9']['fnum'], stride = pm['c9']['stride'], pad = pm['c9']['pad'] )\n",
-    "relu9 = mx.sym.Activation(data = conv9, act_type = 'relu')\n",
-    "conv10 = mx.sym.Convolution(name = 'conv10', data = relu9, kernel = pm['c10']['fsize'], \n",
-    "    num_filter = pm['c10']['fnum'], stride = pm['c10']['stride'], pad = pm['c10']['pad'] )\n",
-    "relu10 = mx.sym.Activation(data = conv10, act_type = 'relu')\n",
-    "\n",
-    "\n",
-    "conv11 = mx.sym.Convolution(name = 'conv11', data = relu10, kernel = pm['c11']['fsize'], \n",
-    "        num_filter = pm['c11']['fnum'], stride = pm['c11']['stride'], pad = pm['c11']['pad'] )"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 35,
-   "metadata": {
-    "collapsed": false
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "([(1L, 1L, 256L, 256L), (8L, 1L, 7L, 7L), (8L,), (16L, 8L, 3L, 3L), (16L,), (32L, 16L, 3L, 3L), (32L,), (64L, 32L, 3L, 3L), (64L,), (64L, 64L, 3L, 3L), (64L,), (64L, 64L, 3L, 3L), (64L,), (64L, 1L, 4L, 4L), (64L, 64L, 3L, 3L), (64L,), (64L, 1L, 4L, 4L), (64L, 64L, 7L, 7L), (64L,), (64L, 1L, 4L, 4L), (16L, 64L, 3L, 3L), (16L,), (8L, 16L, 7L, 7L), (8L,)], [(1L, 8L, 256L, 256L)], [])\n"
-     ]
-    }
-   ],
-   "source": [
-    "print conv10.infer_shape(data = sz)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 39,
-   "metadata": {
-    "collapsed": false
-   },
-   "outputs": [
-    {
-     "ename": "AttributeError",
-     "evalue": "'module' object has no attribute '_reduce'",
-     "output_type": "error",
-     "traceback": [
-      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
-      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
-      "\u001b[1;32m<ipython-input-39-d4e038265899>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0ml\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msym\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mVariable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mname\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34m'l'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      3\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 4\u001b[1;33m \u001b[0my\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmx\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msymbol\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_reduce\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mp\u001b[0m\u001b[1;33m+\u001b[0m\u001b[0ml\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[1;33m=\u001b[0m \u001b[1;36m0\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
-      "\u001b[1;31mAttributeError\u001b[0m: 'module' object has no attribute '_reduce'"
-     ]
-    }
-   ],
-   "source": [
-    "p = mx.sym.Variable(name = 'p')\n",
-    "l = mx.sym.Variable(name = 'l')\n",
-    "\n",
-    "y = mx.symbol._reduce(p+l, axis= 0)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 47,
-   "metadata": {
-    "collapsed": false
-   },
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "(1L, 3L, 25L)"
-      ]
-     },
-     "execution_count": 47,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "a = mx.ndarray.ones((1,3,25))\n",
-    "a.shape"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 49,
-   "metadata": {
-    "collapsed": false
-   },
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "(1L,)\n"
-     ]
-    }
-   ],
-   "source": [
-    "b = mx.ndarray.sum(a, axis = (1,2))\n",
-    "print b.shape"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": []
-  }
- ],
- "metadata": {
-  "kernelspec": {
-   "display_name": "Python 2",
-   "language": "python",
-   "name": "python2"
-  },
-  "language_info": {
-   "codemirror_mode": {
-    "name": "ipython",
-    "version": 2
-   },
-   "file_extension": ".py",
-   "mimetype": "text/x-python",
-   "name": "python",
-   "nbconvert_exporter": "python",
-   "pygments_lexer": "ipython2",
-   "version": "2.7.6"
-  }
- },
- "nbformat": 4,
- "nbformat_minor": 0
-}
diff --git a/Net/experi_net.py b/Net/experi_net.py
index 58078c4..671de6d 100644
--- a/Net/experi_net.py
+++ b/Net/experi_net.py
@@ -1,9 +1,13 @@
 import ipt
 import minpy as minpy
 import mxnet as mx
-import minpy.numpy as np
+import numpy as np
 import create_train_modle as old
 import load_data as load
+from iou_layer import *
+import os
+os.environ["MXNET_ENGINE_TYPE"] = "NaiveEngine"
+
 
 params = old.Params
 
@@ -55,80 +59,70 @@ def net_basic(pm):
         num_filter = pm['c8']['fnum'], stride = pm['c8']['stride'], pad = pm['c8']['pad'] )
     relu8 = mx.sym.Activation(data = conv8, act_type = 'relu')
 
-    up3  = mx.sym.UpSampling(relu3, scale = 2, sample_type = 'bilinear', num_args = 1)
+    up3  = mx.sym.UpSampling(relu8, scale = 2, sample_type = 'bilinear', num_args = 1)
 
 
     conv9 = mx.sym.Convolution(name = 'conv9', data = up3, kernel = pm['c9']['fsize'], 
             num_filter = pm['c9']['fnum'], stride = pm['c9']['stride'], pad = pm['c9']['pad'] )
     relu9 = mx.sym.Activation(data = conv9, act_type = 'relu')
-    # conv10 = mx.sym.Convolution(name = 'conv10', data = relu9, kernel = pm['c10']['fsize'], 
-    #     num_filter = pm['c10']['fnum'], stride = pm['c10']['stride'], pad = pm['c10']['pad'] )
-    # relu10 = mx.sym.Activation(data = conv10, act_type = 'relu')
+    conv10 = mx.sym.Convolution(name = 'conv10', data = relu9, kernel = pm['c10']['fsize'], 
+        # num_filter = pm['c10']['fnum'], 
+        num_filter = 1,
+        stride = pm['c10']['stride'], pad = pm['c10']['pad'] )
+    sgmd = mx.sym.Activation(data = conv10, act_type = 'sigmoid')
 
 
     # conv11 = mx.sym.Convolution(name = 'conv11', data = relu10, kernel = pm['c11']['fsize'], 
     #         num_filter = pm['c11']['fnum'], stride = pm['c11']['stride'], pad = pm['c11']['pad'] )
 #    softmax = mx.sym.Softmax(name = 'softmax', data = conv11)
-    return relu9
-
-def pred_out():
-    rl = net_basic(params)
-
-    conv = mx.sym.Convolution(name = 'conv10', data = rl, kernel = (7,7), num_filter = 1,  
-            stride = (1,1), pad = (0,0) )
-    return out  = mx.sym.Activation(data = conv, act_type = 'sigmoid')
-
-
-class IOU(mx.operator.CustomOp):
-
-    def __init__():
-        super.(IOU,self).__init__(self)
+    return sgmd
 
-    def forward(self, is_train, req, in_data, out_data, aux):
-        pred = in_data[0]
-        ll   = in_data[1]
-        # ll = mx.sym.Variable(name = 'label')
-        out = 2* mx.sym.sum(pred*ll, axis = 0)/mx.sym.sum(pred + ll, axis = 0).
-        self.assign(out_data[0],req[0],out)
 
-    def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
-        pass
-        
+def callback(l):
+    print 'callback' , l[0]
 
-@mx.operator.register("iou")
-class IOUProp(mx.operator.CustomOpProp):
-    def __init__():
-        super(IOUProp,self).__init__(need_top_grad=False)
 
-    def list_arguments(self):
-        return ['data','label']
+def small_iter():
+    '''only ten img and one once'''
 
-    def list_outputs(self):
-        return ['outputs']
+    # img, ll, vimg, vll = load.load_pk('/home/zijia/HeartDeepLearning/Net/o1.pk')
+    # img = img[10:]
+    # ll  = ll [10:]
 
-    def infer_shape(self, inshape):
-        ''' [data shape, label shape] ,[output shape], [aux ..?]'''
-        return [inshape[0],inshape[0]], [inshape[0][0]], []
-
-    def create_operator(self, ctx, shapes, dtypes):
-        return IOU()
+    img = np.random.randn(10,1,256,256)
+    ll  = np.random.randn(10,1,256,256)
 
+    return mx.io.NDArrayIter(img, label = ll, batch_size = 1)
 
 if __name__ == "__main__":
 
-    img, ll, vimg, vll = load.load_pk('/home/zijia/HeartDeepLearning/Net/o1.pk')
+    train = small_iter()
 
-    # upper = net_basic(params)
-    net = mx.sym.SoftmaxOutput(data = upper, act_type = 'sigmoid', name = 'softmax_label')
+    upper = net_basic(params)
+    assert upper.infer_shape(data = (1,1,256,256))[1] == [(1L, 1L, 256L, 256L)], 'infer shape error'
+    
+    net = mx.sym.Custom(data = upper, name = 'softmax', op_type='iou')
 
     model = mx.model.FeedForward(
                 symbol = net,
                 ctx = mx.context.gpu(0),
-                num_epoch = 1000,
+                num_epoch = 200,
                 learning_rate = 3e-3,
-                optimizer = 'adam'
-                # initializer = init
+                optimizer = 'adam',
+                initializer = mx.initializer.Xavier(rnd_type = 'gaussian'),
                 )
 
 
+    # if not Done_test:
+    #     result = model.predict(train, num_batch = 5, return_data = True)
+
+    print '>>>>start to train \n\n'
+    model.fit(
+        train,
+        # eval_data = val,
+        # eval_metric = 'acc',
+        batch_end_callback = callback
+        )
+
+
 
diff --git a/Net/iou_eval.py b/Net/iou_eval.py
new file mode 100644
index 0000000..927543e
--- /dev/null
+++ b/Net/iou_eval.py
@@ -0,0 +1,27 @@
+def forward(self, is_train, req, in_data, out_data, aux):
+    pred = in_data[0]
+    ll   = in_data[1]
+    # print '\nindata!>', in_data
+    # ll = mx.sym.Variable(name = 'label')
+    # print 'in forward'
+    muti = pred * ll
+    union = pred + ll
+
+    # print 'u shape', union.shape
+
+    # print '\n\n\n start upper'
+    upper = 2* mx.ndarray.sum(muti, axis = (1,2,3))
+    # print 'start lower'
+    lower = mx.ndarray.sum(union, axis = (1,2,3))
+    # print 'lower shape', lower.shape
+
+    out = upper/lower
+
+    # print 'outshape',out.shape
+    # print 'outdata>',out_data[0].shape
+
+    # print 'start assign'
+    self.assign(out_data[0],req[0],out)
+    print 'one forward end'
+    # print 'end forward'
+    # assert False, 'here'
\ No newline at end of file
diff --git a/Net/iou_layer.py b/Net/iou_layer.py
new file mode 100644
index 0000000..f3e8df0
--- /dev/null
+++ b/Net/iou_layer.py
@@ -0,0 +1,48 @@
+import ipt
+import mxnet as mx
+import numpy as np
+
+class IOU(mx.operator.CustomOp):
+
+    # def __init__():
+    #     super(IOU,self).__init__(self)
+
+    def forward(self, is_train, req, in_data, out_data, aux):
+        # do nothing
+        print 'in'
+        self.assign(out_data[0],req[0],in_data[0])
+        print 'one forward end'
+        # print 'end forward'
+        # assert False, 'here'
+
+    def backward(self, req, out_grad, in_data, out_data, in_grad, aux):
+        
+        pred = in_data[0]
+        ll   = in_data[1]
+
+        out = (ll/(pred+ll))**2
+        self.assign(in_grad[0],req[0],out)
+        
+
+@mx.operator.register("iou")
+class IOUProp(mx.operator.CustomOpProp):
+    # def __init__():
+        # super(IOUProp,self).__init__(need_top_grad=False)
+
+    def list_arguments(self):
+        return ['data','label']
+
+    def list_outputs(self):
+        return ['outputs']
+
+    def infer_shape(self, inshape):
+        ''' [data shape, label shape] ,[output shape], [aux ..?]'''
+        # print inshape, 'iou'
+        data_shape = inshape[0]
+        # print data_shape
+
+        # print [tuple(inshape[0]), tuple(inshape[0])], [ (inshape[0][0], )], []
+        return [inshape[0],inshape[0]], [ inshape[0] ] , []
+
+    def create_operator(self, ctx, shapes, dtypes):
+        return IOU()
\ No newline at end of file
diff --git a/Net/load_data.py b/Net/load_data.py
index 35a96b7..210f1dc 100644
--- a/Net/load_data.py
+++ b/Net/load_data.py
@@ -77,7 +77,7 @@ def create_iter(img,ll,vimg,vll,batch_size =50,last_batch_handle='pad'):
 
 def get_():
     data = load_pk('/home/zijia/HeartDeepLearning/Net/o1.pk')
-    return create_iter(*data, batch_size = 10)
+    return create_iter(*data, batch_size = 1)
 
     
 
diff --git a/Net/test_sym.py b/Net/test_sym.py
index 0e9ab9b..41562f5 100644
--- a/Net/test_sym.py
+++ b/Net/test_sym.py
@@ -10,30 +10,9 @@ class IOU(mx.operator.CustomOp):
     #     super(IOU,self).__init__(self)
 
     def forward(self, is_train, req, in_data, out_data, aux):
-        pred = in_data[0]
-        ll   = in_data[1]
-        # print '\nindata!>', in_data
-        # ll = mx.sym.Variable(name = 'label')
-        # print 'in forward'
-        muti = pred * ll
-        union = pred + ll
-
-        # print 'u shape', union.shape
-
-        # print '\n\n\n start upper'
-        upper = 2* mx.ndarray.sum(muti, axis = (1,2,3))
-        # print 'start lower'
-        lower = mx.ndarray.sum(union, axis = (1,2,3))
-        # print 'lower shape', lower.shape
-
-        out = upper/lower
-
-        # print 'outshape',out.shape
-        # print 'outdata>',out_data[0].shape
-
-        # print 'start assign'
-        self.assign(out_data[0],req[0],out)
-        print 'oneforward end'
+        # do nothing
+        self.assign(out_data[0],req[0],in_data[0])
+        print 'one forward end'
         # print 'end forward'
         # assert False, 'here'
 
@@ -64,12 +43,11 @@ class IOUProp(mx.operator.CustomOpProp):
         # print data_shape
 
         # print [tuple(inshape[0]), tuple(inshape[0])], [ (inshape[0][0], )], []
-        return [inshape[0],inshape[0]], [ (inshape[0][0],) ], []
+        return [inshape[0],inshape[0]], [ inshape[0] ] , []
 
     def create_operator(self, ctx, shapes, dtypes):
         return IOU()
 
-
 def make_iou(data, label):
     return mx.sym.Custom(data =data, label = label, name = 'iou', op_type='iou')
 
@@ -79,6 +57,11 @@ def get_iou():
 
     return mx.sym.Custom(data = d, name = 'iou', op_type='iou')
 
+def callback(l):
+    print '\n>>>>>callback', l[0]
+    print l[1:], '\n'
+
+
 if __name__ == '__main__':
 
     d = mx.sym.Variable(name = 'data')
@@ -87,12 +70,21 @@ if __name__ == '__main__':
     iou = mx.sym.Custom(data =d, name = 'softmax', op_type='iou')
 
     img = np.random.randn(10,1,256,256)
-    label = np.random.randn(10,1,256,256)
+    label = np.random.rand(10,1,256,256)
+
+    vimg = np.random.randn(2,1,256,256)
+    vlabel = np.random.randn(2,1,256,256)
 
-    model = mx.model.FeedForward(iou, num_epoch=1)
+    model = mx.model.FeedForward(iou, num_epoch=10)
 
-    itr = mx.io.NDArrayIter(img, label = label, batch_size = 1)
+    itr   = mx.io.NDArrayIter(img, label = label, batch_size = 1)
+    viter = mx.io.NDArrayIter(vimg, label = vlabel, batch_size = 1)
 
     print 'start to train'
-    model.fit(itr)
+    model.fit(
+        itr,
+        eval_data = viter,
+        eval_metric = 'acc',
+        batch_end_callback = callback
+        )
     
diff --git a/Net/test_sym_output.txt b/Net/test_sym_output.txt
new file mode 100644
index 0000000..d4a2b4a
--- /dev/null
+++ b/Net/test_sym_output.txt
@@ -0,0 +1,5044 @@
+done!
+start to train
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5050>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.6296, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.676943, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.683208, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.726361, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.732529, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.787227, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.793375, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.82574, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5450>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.831732, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.864173, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a50d0>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.874802, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.919461, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5550>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.925454, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 1, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 2, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 3, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 4, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 5, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 6, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 7, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 8, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 9, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.959185, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5590>, 'nbatch': 10, 'param_names': [], 'tic': 1465706543.965337, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a50d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 1, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 2, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 3, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 4, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 5, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 6, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a55d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 7, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 8, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5210>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 9, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706543.998674, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5190>, 'nbatch': 10, 'param_names': [], 'tic': 1465706544.005733, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(1, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 1, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(2, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 2, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(3, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 3, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(4, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 4, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(5, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 5, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a51d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(6, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 6, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a56d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(7, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 7, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a54d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(8, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 8, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a52d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(9, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5150>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 9, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7fbd7a593cd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(10, <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7fbd7a593d50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, locals={...}), 'toc': 1465706544.039106, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7fbda81a28d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7fbd7a593d10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7fbd7a593cd0>, 'batch_end_callback': <function callback at 0x7fbd7a5912a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5050>, 'updater': <function updater at 0x7fbd7a591cf8>, 'name_value': [('accuracy', 0.6844024658203125)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6844024658203125, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7fbd7a5a5750>, 'nbatch': 10, 'param_names': [], 'tic': 1465706544.045082, 'train_data': <mxnet.io.NDArrayIter object at 0x7fbd7a593c10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7fbd7a5a5210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7fbd7a593f90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+done!
+start to train
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded050>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 0
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 0, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'max_data_shape': None, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'work_load_list': None, 'sym_gen': None, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.292016, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=0, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 1
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 1, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.340932, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.352129, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=1, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 2
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 2, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.391038, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.398194, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=2, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 3
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 3, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.431265, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.437148, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=3, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 4
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 4, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.484526, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded450>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.494835, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=4, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 5
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 5, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.534501, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded0d0>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.540367, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=5, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 6
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 6, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.574223, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded550>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.580955, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=6, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 7
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 7, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.614742, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded590>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.620833, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded0d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=7, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded710>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded350>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded5d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded590>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded210>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded510>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 8
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 8, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.654477, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded190>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.661627, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded750>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded150>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded550>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(1, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=8, nbatch=10, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 1, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded110>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(2, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=1, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 2, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded610>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(3, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=2, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 3, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded310>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(4, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=3, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 4, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded490>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(5, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=4, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 5, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded1d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(6, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=5, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 6, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded6d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(7, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=6, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 7, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded690>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded4d0>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(8, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=7, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 8, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded2d0>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded190>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(9, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=8, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded150>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 9, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+
+
+from model.py label [<mxnet.ndarray.NDArray object at 0x7f1d1cded090>]
+(1L, 1L, 256L, 256L)
+from model.py eval <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0> 
+
+
+
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded650>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+
+>>>>>callback 9
+(10, <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, {'begin_epoch': 0, 'arg_names': ['data', 'softmax_label'], 'kvstore': None, 'do_reset': True, 'eval_batch_end_callback': None, 'monitor': None, 'executor_manager': <mxnet.executor_manager.DataParallelExecutorManager object at 0x7f1d1cddbd50>, 'eval_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc50>, 'epoch_size': None, 'epoch': 9, 'end_epoch': 10, 'batch_end_params': BatchEndParams(epoch=9, nbatch=9, eval_metric=<mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, locals={...}), 'toc': 1465706788.694875, 'logger': <module 'logging' from '/usr/lib/python2.7/logging/__init__.pyc'>, 'arg_params': {}, 'symbol': <mxnet.symbol.Symbol object at 0x7f1d4a9fd8d0>, 'update_on_kvstore': False, 'aux_names': [], 'optimizer': <mxnet.optimizer.SGD object at 0x7f1d1cddbd10>, 'eval_metric': <mxnet.metric.Accuracy object at 0x7f1d1cddbcd0>, 'batch_end_callback': <function callback at 0x7f1d1cdd92a8>, 'epoch_end_callback': None, 'data_batch': <mxnet.io.DataBatch object at 0x7f1d1cded050>, 'updater': <function updater at 0x7f1d1cdd9cf8>, 'name_value': [('accuracy', 0.6836929321289062)], 'max_data_shape': None, 'name': 'accuracy', 'i': 1, 'aux_params': {}, 'ctx': [cpu(0)], 'mutable_data_shape': False, 'value': 0.6836929321289062, 'work_load_list': None, 'sym_gen': None, 'eval_batch': <mxnet.io.DataBatch object at 0x7f1d1cded750>, 'nbatch': 10, 'param_names': [], 'tic': 1465706788.700981, 'train_data': <mxnet.io.NDArrayIter object at 0x7f1d1cddbc10>}) 
+
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded450>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
+one forward end
+in Accuracy class
+
+labels [<mxnet.ndarray.NDArray object at 0x7f1d1cded210>] (1L, 1L, 256L, 256L)
+
+predis [<mxnet.ndarray.NDArray object at 0x7f1d1cddbf90>] (1L, 1L, 256L, 256L)
+pass shape check
+done prepare pred_label
+in shape check
+label (1, 1, 256, 256)
+pred (1, 256, 256)
diff --git a/kaggle_tutorial/ONLINE_IOU.jpg b/kaggle_tutorial/ONLINE_IOU.jpg
new file mode 100644
index 0000000..1495154
Binary files /dev/null and b/kaggle_tutorial/ONLINE_IOU.jpg differ
diff --git a/kaggle_tutorial/VALIDATE_IOU.jpg b/kaggle_tutorial/VALIDATE_IOU.jpg
new file mode 100644
index 0000000..815b385
Binary files /dev/null and b/kaggle_tutorial/VALIDATE_IOU.jpg differ
diff --git a/kaggle_tutorial/edv-dedv.jpg b/kaggle_tutorial/edv-dedv.jpg
new file mode 100644
index 0000000..1c5bbc8
Binary files /dev/null and b/kaggle_tutorial/edv-dedv.jpg differ
diff --git a/kaggle_tutorial/ef-def.jpg b/kaggle_tutorial/ef-def.jpg
new file mode 100644
index 0000000..206326e
Binary files /dev/null and b/kaggle_tutorial/ef-def.jpg differ
diff --git a/kaggle_tutorial/esv-desv.jpg b/kaggle_tutorial/esv-desv.jpg
new file mode 100644
index 0000000..41198ef
Binary files /dev/null and b/kaggle_tutorial/esv-desv.jpg differ
